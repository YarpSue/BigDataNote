# go

数组的一些特殊的用法
**可以对数组进行索引**

	type Currency int

	const (
		USD Currency = iota
		EUR
		GBP
		RMB
	)

	symbol := [...]string{USD: "$", EUR: "€", GBP: "￡", RMB: "￥"}

	fmt.Println(RMB, symbol[RMB])

	r := [...]int{2:5} // 这是一种索引的方式 含义时索引为2的位置的元素是5
	// 共100项，前99都是0，最后一个是-1
	fmt.Println(r)

数组比较需要元素和类型全都相同 才能判断为相同。

%d	十进制整数
%x，%o，%b	十六进制，八进制，二进制整数。
%f，%g，%e 浮点数: 3.141593 3.141592653589793 3.141593e+00
%t	布尔:true或false
%c	字符(rune) (Unicode码点)
%s	字符串
%q	带双引号的字符事"abc"或带单引号的字符'C'
%v	变量的自然形式(natural format)
%T	变量的类型
%%		字面上的百分号标志 (无操作数 )

数组一般做为参数传递的是指针，这样能灵活一点。
这样做的原因是 参数传递后函数内要复制参数的副本。

这两种写法是等价的
pp := &Point{1, 2}

==

pp := new(Point)  // 这是返回一个结构体类型的指针
*pp = Point{1, 2}

可比较的结构体也是可以作为map的key的

